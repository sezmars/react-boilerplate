import{w as t,A as s,x as b,b as f}from"./index-1435744e.js";const h=async()=>{const{data:e,error:r}=await t.from(s.cabins).select("*");if(r)throw console.error(r),new Error("Cabins could not be loaded");return e},y=async(e,r)=>{var i,u,g;const a=(u=(i=e.image)==null?void 0:i.startsWith)==null?void 0:u.call(i,b),n=`${Math.random()}-${(g=e==null?void 0:e.image)==null?void 0:g.name}`.replaceAll("/",""),d=a?e.image:`${b}/storage/v1/object/public/cabin-images/${n}`;let o=t.from(s.cabins);r||(o=o.insert([{...e,image:d}])),r&&(o=o.update({...e,image:d}).eq("id",r));const{data:c,error:l}=await o.select().single();if(l)throw console.error(l),new Error("Cabin could not be created");if(a)return c;const{error:m}=await t.storage.from("cabin-images").upload(n,e.image);if(m)throw await t.from(s.cabins).delete().eq("id",c.id),console.error(m),new Error("Cabin image could not be uploaded and the cabin was not created");return c},q=async e=>{const{data:r,error:a}=await t.from(s.cabins).delete().eq("id",e);if(a)throw console.error(a),new Error("Cabins could not be deleted");return r},w=()=>{const{isLoading:e,data:r,error:a}=f({queryKey:[s.cabins],queryFn:h});return{isLoading:e,error:a,cabins:r}};export{q as d,y as m,w as u};
